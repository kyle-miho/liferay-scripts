<?xml version="1.0"?>
<!-- 
	Main commands: reset-bundle(default), save, load
-->
<project name="Liferay-Automation" default="reset-bundle">
	<!--File includes-->
	<property file="app.properties"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${antcontrib.location}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<!--Asks user which bundle to unzip-->
	<target name="setup-properties">
		<input message="Which CE bundle do you want to work with?" validargs="master,master-private,ce72,dxp72,ce71ga2,dxp71ga1,ce70ga6,dxp70ga1,ce62ga6,dxp62sp20,test" addproperty="bundle.type"/>
		<if>
			<equals arg1="master" arg2="${bundle.type}"/>
			<then>
				<!-- change current bundle name-->
				<property name="current.bundle.name" value="${master.name}"/>
			</then>
			<elseif>
				<equals arg1="master-private" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${masterprivate.name}"/>
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce72" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${ce72.name}" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp72" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${dxp72.name}" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce71ga2" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${ce71ga2.name}" />
					<property name="tomcat910" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp71ga1" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${dxp71ga1.name}"/>
					<property name="tomcat910" value="yes" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
			<equals arg1="ce70ga6" arg2="${bundle.type}"/>
				<then>
					<property name="tomcat8" value="yes" />
					<property name="current.bundle.name" value="${ga6ce7.name}"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp70ga1" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ga1dxp.name}"/>
					<property name="tomcat8" value="yes" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce62ga6" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ce62.name}"/>
					<property name="tomcat7" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp62sp20" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ce62ee.name}"/>
					<property name="tomcat7" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="test" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${test.name}"/>
				</then>
			</elseif>
		</if>

		<input message="Which Database do you want to reset?" validargs="mysql,maria" addproperty="database.type" />

		<property name="specific.bundle.home" value ="${bundle.homefolder}/${current.bundle.name}"/>
		<if>
			<equals arg1="${tomcat7}" arg2="yes" />
			<then>
				<property name="server.name" value="${server.foldername7}"/>
			</then>
			<elseif>
				<equals arg1="${tomcat8}" arg2="yes" />
					<then>
						<property name="server.name" value="${server.foldername8}"/>
					</then>
			</elseif>
			<elseif>
				<equals arg1="${tomcat96}" arg2="yes" />
					<then>
						<property name="server.name" value="${server.foldername9}"/>
					</then>
			</elseif>
			<elseif>
				<equals arg1="${tomcat910}" arg2="yes" />
				<then>
					<property name="server.name" value="${server.foldername910}" />
				</then>
			</elseif>
			<else>
				<echo>Using default appserver name</echo>	
				<property name="server.name" value="${server.foldernamenew}"/>
			</else>
		</if>
	</target>

	<!--Sets up remote staging based on master bundle -->
	<target name="setup-remote-staging" depends="setup-properties">
		<save backUpName="${specific.bundle.home}-remote" homeDir="${specific.bundle.home}" />

		<!-- update server.xml -->

		<!-- update portal-ext properties-->

		<!-- update staging config -->
	</target>

	<!--Tomcat dependencies required after bundle compilation-->
	<target name="reset-bundle" depends="setup-properties">
		<if>
			<equals arg1="${database.type}" arg2="maria" />
			<then>
				<reset-db-maria databaseName="${sql.databaseName}" exePath="${maria.prog}"/>
				<create-portal-ext-prop-mariadb serverDir="${specific.bundle.home}/${server.name}" propertyDir="${property.location}" />
			</then>
			<else>
				<reset-db databaseName="${sql.databaseName}" exePath="${sql.prog}" />
				<create-portal-ext-prop serverDir="${specific.bundle.home}/${server.name}" propertyDir="${property.location}" />
			</else>
		</if>
		<reset-data-deploy homeDir="${specific.bundle.home}" />
		<replace-mysql-jar jarPath="${sql.jarpath}" serverDir="${specific.bundle.home}/${server.name}" />
		<remove-chat-jar serverDir="${specific.bundle.home}/${server.name}" />
		<license homeDir="${specific.bundle.home}" licenseLocation="${license.location}" licenseRequired ="${license.required}" />
		<setup-setenv appServerMemory="${appserver.memory}" serverDir="${specific.bundle.home}/${server.name}" />
	</target>


	<target name="load">
		<echo>Checking if saved bundle exists</echo>
		<if>
			<available file="${bundle.homefolder}/${master.backup.name}" type="dir"/>
			<then>
				<echo>Found saved bundle!</echo>
			</then>
			<else>
				<fail>No save exists!</fail>
			</else>
		</if>

		<echo>Clean current bundle</echo>
		<if>
			<available file="${bundle.homefolder}/${master.name}" type="dir"/>
			<then>
				<echo>Found! Deleting current bundle</echo>
				<delete dir="${bundle.homefolder}/${master.name}"/>
			</then>
			<else>
				<echo>Current bundle already clean!</echo>
			</else>
		</if>

		<echo>Copying over current bundle</echo>
		<copy todir="${bundle.homefolder}/${master.name}">
			<fileset dir="${bundle.homefolder}/${master.backup.name}" />
		</copy>

		<echo>Bundle loaded!</echo>
	</target>

	<target name ="save" depends="setup-properties">
		<save backUpName="${master.backup.name}" homeDir="${specific.bundle.home}" />
	</target>

	<!-- Deletes and creates a fresh MYSQL database -->
	<macrodef name="reset-db">
		<attribute name="exePath" />
		<attribute name="databaseName" />

		<sequential>
			<echo>Resetting Database ${sql.databaseName}</echo>

			<exec executable="@{exePath}">
				<arg value="-e"/>
				<arg value="drop database if exists @{databaseName}; create database @{databaseName} char set utf8;"/>
			</exec>

			<echo>Resetting successful!</echo>
		</sequential>
	</macrodef>

	<macrodef name="reset-db-maria">
		<attribute name="exePath" />
		<attribute name="databaseName" />

		<sequential>
			<echo>Resetting Database ${sql.databaseName}</echo>
			<exec executable="@{exePath}">
				<arg value="-e"/>
				<arg value="drop database if exists @{databaseName}; create database @{databaseName} char set utf8;"/>
			</exec>

			<echo>Resetting successful!</echo>
		</sequential>
	</macrodef>

	<!-- Searches for and updates portal-ext.properties-->
	<macrodef name="create-portal-ext-prop">
		<attribute name="propertyDir" />
		<attribute name="serverDir" />

		<sequential>
			<echo>Searching for portal-ext.properties</echo>
			<if>
				<available file="@{propertyDir}/portal-ext.properties"/>
				<then>
					<echo>portal-ext.properties found!</echo>
					<if>
						<available file="@{serverDir}/webapps/ROOT/WEB-INF/classes/" type="dir"/>
						<then>
							<echo>Bundle folder found! copying to @{serverDir}/webapps/ROOT/WEB-INF/classes/</echo>
							<delete file="@{serverDir}/webapps/ROOT/WEB-INF/classes/portal-ext.properties"></delete>
							<copy file="@{propertyDir}/portal-ext.properties" todir="@{serverDir}/webapps/ROOT/WEB-INF/classes/"></copy>
						</then>
					</if>
				</then>
				<else>
					<echo>portal-ext.properties not found!</echo>
					<fail message="Missing portal-ext.properties at @{propertyDir}"/>
				</else>
			</if>
		</sequential>
	</macrodef>

		<!-- Searches for and updates portal-ext.properties-->
	<macrodef name="create-portal-ext-prop-mariadb">
		<attribute name="propertyDir" />
		<attribute name="serverDir" />

		<sequential>
			<echo>Searching for portal-ext.properties</echo>
			<if>
				<available file="@{propertyDir}/maria/portal-ext.properties"/>
				<then>
					<echo>portal-ext.properties found!</echo>
					<if>
						<available file="@{serverDir}/webapps/ROOT/WEB-INF/classes/" type="dir"/>
						<then>
							<echo>Bundle folder found! copying to @{serverDir}/webapps/ROOT/WEB-INF/classes/</echo>
							<delete file="@{serverDir}/webapps/ROOT/WEB-INF/classes/portal-ext.properties"></delete>
							<copy file="@{propertyDir}/maria/portal-ext.properties" todir="@{serverDir}/webapps/ROOT/WEB-INF/classes/"></copy>
						</then>
					</if>
				</then>
				<else>
					<echo>portal-ext.properties not found!</echo>
					<fail message="Missing portal-ext.properties at @{propertyDir}/maria"/>
				</else>
			</if>
		</sequential>
	</macrodef>

	<!-- Deletes Data and Deploy Folders -->
	<macrodef name="reset-data-deploy">
		<attribute name="homeDir" />

		<sequential>
			<echo>Searching for data folder</echo>
			<if>
				<available file="@{homeDir}/data" type="dir"/>
				<then>
					<echo>Found! Deleting data folder</echo>
					<delete dir="@{homeDir}/data"/>
				</then>
				<else>
					<echo>Data folder already clean!</echo>
				</else>
			</if>

			<echo>Searching for deploy folder</echo>
			<if>
				<available file="@{homeDir}/deploy" type="dir"/>
				<then>
					<echo>Found! Deleting deploy folder</echo>
					<!--<delete dir="@{homeDir}/deploy"/>-->
				</then>
				<else>
					<echo>Deploy folder already clean!</echo>
				</else>
			</if>

			<echo>Finished deleting folders</echo>
		</sequential>
	</macrodef>

	<macrodef name="replace-mysql-jar">
		<attribute name="serverDir" />
		<attribute name="jarPath" />

		<sequential>
			<echo>Updating mysql.jar in @{serverDir}/lib/ext</echo>
			<if>
				<available file="@{serverDir}/lib/ext/mysql.jar"/>
				<then>
					<echo>Old mysql.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/lib/ext/mysql.jar"/>
				</then>
			</if>
			<copy file="@{jarpath}/mysql.jar" todir="@{serverDir}/lib/ext"/>
		</sequential>
	</macrodef>

	<macrodef name="remove-chat-jar">
		<attribute name="serverDir" />

		<sequential>
			<echo>Deleting chat jars in @{serverDir}/osgi/modules</echo>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.api.jar"/>
				<then>
					<echo>com.liferay.chat.api.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.api.jar"/>
				</then>
			</if>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.service.jar"/>
				<then>
					<echo>com.liferay.chat.service.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.service.jar"/>
				</then>
			</if>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.web.jar"/>
				<then>
					<echo>com.liferay.chat.web.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.web.jar"/>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="license">
		<attribute name="homeDir" />
		<attribute name="licenseLocation" />
		<attribute name="licenseRequired" default="False" />

		<sequential>
			<echo>Checking if License is needed</echo>
			<if>
				<available file="@{licenseLocation}/7.0License.xml"/>
				<then>
					<echo>License found!</echo>
					<if>
						<equals arg1="@{licenseRequired}" arg2="True"/>
						<then>
							<echo>Deploy folder found! copying to ${specific.bundle.home}/deploy/</echo>
							<copy file="@{licenseLocation}/7.0License.xml" todir="@{homeDir}/deploy/"></copy>
						</then>
					</if>
				</then>
				<else>
					<echo>License not found!</echo>
					<fail message="Missing License at @{licenseLocation}/7.0License.xml"/>
				</else>
			</if>
		</sequential>
	</macrodef>

	<!-- note save/load only works with master -->
	<macrodef name="save">
		<attribute name="backUpName" />
		<attribute name="homeDir" />

		<sequential>
			<if>
				<available file="@{backUpName}" type="dir"/>
				<then>
					<echo>Found! Deleting old saved bundle</echo>
					<delete dir="@{backUpName}"/>
				</then>
				<else>
					<echo>Old bundle already clean!</echo>
				</else>
			</if>

			<if>
				<not>
					<available file="@{backUpName}" type="dir"/>
				</not>
				<then>
					<echo>Copying over current bundle</echo>
					<copy todir="@{backUpName}">
						<fileset dir="@{homeDir}" />
					</copy>
				</then>
				<else>
					<fail>Destination not clean!</fail>
				</else>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="setup-setenv">
		<attribute name="appServerMemory" />
		<attribute name="serverDir" />

		<sequential>
			<echo>Setting memory of @{serverDir}/bin/setenv.bat to use 4GB</echo>
			<replaceregexp file="@{serverDir}/bin/setenv.bat"
			match="-Xms[0-9]+m" replace="-Xms@{appServerMemory}" byline="false" />
			<replaceregexp file="@{serverDir}/bin/setenv.bat"
			match="-Xmx[0-9]+m" replace="-Xmx@{appServerMemory}" byline="false" />
		</sequential>
	</macrodef>
</project>