<?xml version="1.0"?>
<!-- 
	Main commands: reset-bundle(default), save, load
-->
<project name="Liferay-Automation" default="reset-bundle">
	<!--File includes-->
	<property file="app.properties"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${antcontrib.location}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<include file="build-reset-bundle.xml" />

	<!--Asks user which bundle to unzip-->
	<target name="setup-properties">
		<input message="Which CE bundle do you want to work with?" validargs="master,master-private,ce72,dxp72,ce71ga2,dxp71ga1,ce70ga6,dxp70ga1,ce62ga6,dxp62sp20,test" addproperty="bundle.type"/>
		<if>
			<equals arg1="master" arg2="${bundle.type}"/>
			<then>
				<!-- change current bundle name-->
				<property name="current.bundle.name" value="${master.name}"/>
			</then>
			<elseif>
				<equals arg1="master-private" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${masterprivate.name}"/>
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce72" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${ce72.name}" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp72" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${dxp72.name}" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce71ga2" arg2="${bundle.type}" />
				<then>
					<property name="current.bundle.name" value="${ce71ga2.name}" />
					<property name="tomcat910" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp71ga1" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${dxp71ga1.name}"/>
					<property name="tomcat910" value="yes" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
			<equals arg1="ce70ga6" arg2="${bundle.type}"/>
				<then>
					<property name="tomcat8" value="yes" />
					<property name="current.bundle.name" value="${ga6ce7.name}"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp70ga1" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ga1dxp.name}"/>
					<property name="tomcat8" value="yes" />
					<property name="license.required" value="True"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="ce62ga6" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ce62.name}"/>
					<property name="tomcat7" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="dxp62sp20" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${ce62ee.name}"/>
					<property name="tomcat7" value="yes" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="test" arg2="${bundle.type}"/>
				<then>
					<property name="current.bundle.name" value="${test.name}"/>
				</then>
			</elseif>
		</if>

		<input message="Which Database do you want to reset?" validargs="mysql,maria" addproperty="database.type" />

		<property name="specific.bundle.home" value ="${bundle.homefolder}/${current.bundle.name}"/>
		<if>
			<equals arg1="${tomcat7}" arg2="yes" />
			<then>
				<property name="server.name" value="${server.foldername7}"/>
			</then>
			<elseif>
				<equals arg1="${tomcat8}" arg2="yes" />
					<then>
						<property name="server.name" value="${server.foldername8}"/>
					</then>
			</elseif>
			<elseif>
				<equals arg1="${tomcat96}" arg2="yes" />
					<then>
						<property name="server.name" value="${server.foldername9}"/>
					</then>
			</elseif>
			<elseif>
				<equals arg1="${tomcat910}" arg2="yes" />
				<then>
					<property name="server.name" value="${server.foldername910}" />
				</then>
			</elseif>
			<else>
				<echo>Using default appserver name</echo>	
				<property name="server.name" value="${server.foldernamenew}"/>
			</else>
		</if>
	</target>

	<!--Sets up remote staging based on master bundle -->
	<target name="setup-remote-staging" depends="setup-properties">
		<save backUpExtension="remote" homeDir="${specific.bundle.home}" />

		<!-- update server.xml -->

		<!-- update portal-ext properties-->

		<!-- update staging config -->
	</target>

	<!--Tomcat dependencies required after bundle compilation-->
	<target name="reset-bundle" depends="setup-properties">
		<if>
			<equals arg1="${database.type}" arg2="maria" />
			<then>
				<reset-db-maria databaseName="${sql.databaseName}" exePath="${maria.prog}"/>
				<create-portal-ext-prop-mariadb serverDir="${specific.bundle.home}/${server.name}" propertyDir="${property.location}" />
			</then>
			<else>
				<reset-db databaseName="${sql.databaseName}" exePath="${sql.prog}" />
				<create-portal-ext-prop serverDir="${specific.bundle.home}/${server.name}" propertyDir="${property.location}" />
			</else>
		</if>
		<reset-data-deploy homeDir="${specific.bundle.home}" />
		<replace-mysql-jar jarPath="${sql.jarpath}" serverDir="${specific.bundle.home}/${server.name}" />
		<remove-chat-jar serverDir="${specific.bundle.home}/${server.name}" />
		<license homeDir="${specific.bundle.home}" licenseLocation="${license.location}" licenseRequired ="${license.required}" />
		<setup-setenv appServerMemory="${appserver.memory}" serverDir="${specific.bundle.home}/${server.name}" />
	</target>

	<target name="load">
		<load backUpExtension="backup" homeDir="${specific.bundle.home}" />
	</target>

	<target name ="save" depends="setup-properties">
		<save backUpExtension="backup" homeDir="${specific.bundle.home}" />
	</target>
</project>