<?xml version="1.0"?>
<!-- 
	Main commands: reset-bundle(default), save, load
-->
<project name="Liferay-Automation-Properties">
	<!--File includes-->
	<property file="app.properties"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${antcontrib.location}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<include file="build-docker.xml" />
	<include file="build-portal-ext.xml" />

	<macrodef name="reset-db-jar">
		<attribute name="database" />
		<attribute name="jarPath" />
		<attribute name="serverDir" />

		<sequential>
			<if> 
				<equals arg1="@{database}" arg2="db2" />
				<then>
					<replace-jar jarName="db2jcc4.jar" jarPath="@{jarPath}" serverDir="@{serverDir}" />
				</then>
				<elseif>
					<equals arg1="@{database}" arg2="oracle" />
					<then>
						<replace-jar jarName="ojdbc8.jar" jarPath="@{jarPath}" serverDir="@{serverDir}" />
					</then>
				</elseif>
				<elseif>
					<equals arg1="@{database}" arg2="sqlserver" />
					<then>
						<replace-jar jarName="mssql-jdbc-7.4.1.jre8.jar" jarPath="@{jarPath}" serverDir="@{serverDir}" />
					</then>
				</elseif>
			</if>
		</sequential>
	</macrodef>

	<!-- Deletes and creates a fresh database -->
	<macrodef name="reset-db">
		<attribute name="database" />
		<attribute name="exePath" />

		<sequential>
			<if>
				<equals arg1="@{database}" arg2="hypersonic" />
				<then>
					<echo>Hypersonic does not need to be cleaned since it gets cleaned when the data folder is deleted</echo>
				</then>
				<else>
					<echo>Resetting Database @{database}</echo>

					<remove-container containerName="@{database}" dockerPath="@{exePath}" />
					<prune-volume dockerPath="@{exePath}" />
					<start-database-container containerName="@{database}" databaseName="@{database}" dockerPath="@{exePath}" />
				</else>
			</if>

			<echo>Resetting successful!</echo>
		</sequential>
	</macrodef>

	<macrodef name="set-portal-ext-props">
		<attribute name="databaseName" />
		<attribute name="destinationDir" />
		<attribute name="propertiesDir" />

		<sequential>
			<!--Default -->
			<copy-file destinationDir="@{destinationDir}" fileDir="@{propertiesDir}" fileName="portal-ext.properties" />

			<!-- Database -->
			<append-file destinationFile="@{destinationDir}/portal-ext.properties" file="@{propertiesDir}/database/@{databaseName}.properties"/>

			<!-- Remote Staging-->
			<append-file destinationFile="@{destinationDir}/portal-ext.properties" file="@{propertiesDir}/remote-staging.properties"/>
		
		</sequential>
	</macrodef>

	<!-- Deletes Data and Deploy Folders -->
	<macrodef name="reset-data-deploy">
		<attribute name="bundleDir" />

		<sequential>
			<echo>Searching for data folder</echo>
			<if>
				<available file="@{bundleDir}/data" type="dir"/>
				<then>
					<echo>Found! Deleting data folder</echo>
					<delete dir="@{bundleDir}/data"/>
				</then>
				<else>
					<echo>Data folder already clean!</echo>
				</else>
			</if>

			<echo>Searching for deploy folder</echo>
			<if>
				<available file="@{bundleDir}/deploy" type="dir"/>
				<then>
					<echo>Found! Deleting deploy folder</echo>
					<!--<delete dir="@{bundleDir}/deploy"/>-->
				</then>
				<else>
					<echo>Deploy folder already clean!</echo>
				</else>
			</if>

			<echo>Finished deleting folders</echo>
		</sequential>
	</macrodef>

	<macrodef name="replace-jar">
		<attribute name="serverDir" />
		<attribute name="jarName" />
		<attribute name="jarPath" />

		<sequential>
			<echo>Updating @{jarName} in @{serverDir}/lib/ext</echo>
			<if>
				<available file="@{serverDir}/lib/ext/@{jarName}"/>
				<then>
					<echo>Old @{jarName} Found! Deleting.</echo>
					<delete file="@{serverDir}/lib/ext/@{jarName}"/>
				</then>
			</if>
			<copy file="@{jarpath}/@{jarName}" todir="@{serverDir}/lib/ext"/>
		</sequential>
	</macrodef>

	<macrodef name="remove-chat-jar">
		<attribute name="serverDir" />

		<sequential>
			<echo>Deleting chat jars in @{serverDir}/osgi/modules</echo>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.api.jar"/>
				<then>
					<echo>com.liferay.chat.api.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.api.jar"/>
				</then>
			</if>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.service.jar"/>
				<then>
					<echo>com.liferay.chat.service.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.service.jar"/>
				</then>
			</if>

			<if>
				<available file="@{serverDir}/osgi/modules/com.liferay.chat.web.jar"/>
				<then>
					<echo>com.liferay.chat.web.jar Found! Deleting.</echo>
					<delete file="@{serverDir}/osgi/modules/com.liferay.chat.web.jar"/>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="add-license">
		<attribute name="bundleDir" />
		<attribute name="licenseLocation" />

		<sequential>
			<echo>Checking if License is needed</echo>
			<if>
				<available file="@{licenseLocation}/7.0License.xml"/>
				<then>
					<echo>License found!</echo>
					<copy file="@{licenseLocation}/7.0License.xml" todir="@{bundleDir}/deploy/"></copy>
				</then>
				<else>
					<echo>License not found!</echo>
					<fail message="Missing License at @{licenseLocation}/7.0License.xml"/>
				</else>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="setup-setenv">
		<attribute name="appServerMemory" />
		<attribute name="serverDir" />

		<sequential>
			<echo>Setting memory of @{serverDir}/bin/setenv.sh to use 4GB</echo>
			<replaceregexp file="@{serverDir}/bin/setenv.sh"
			match="-Xms[0-9]+m" replace="-Xms@{appServerMemory}" byline="false" />
			<replaceregexp file="@{serverDir}/bin/setenv.sh"
			match="-Xmx[0-9]+m" replace="-Xmx@{appServerMemory}" byline="false" />
		</sequential>
	</macrodef>
</project>